Quarters Unity SDK - IAP - In App Purchases Module

IAP module allows very simple way for the user to purchase Quarters using platform native In App Purchases process


###############################

Suported platforms: iOS, Android

###############################

Prerequisites:
- Unity IAP Package https://docs.unity3d.com/Manual/UnityIAPSettingUp.html
- iOS:
    - iTunes Connect account with valid "Paid Applications" agreements. This step is critical for testing and validating purchases
    - iTunes Connect App setup with added IAP Consumable products
    - Apple Shared Secret for IAP Receipt Validation field in Quarters app console
- Android:
    - active Google merchant account
    - Google Play Store App setup with uploaded build (alpha, beta or production) with Billing support enabled
    - Google Public Key for IAP Receipt Validation field in Quarters app console



###############################


Installation:
1.  Import content of QuartersSDK/Modules/IAPModule.unitypackage to your project
2.  Add QUARTERS_MODULE_IAP scripting define in Player Settings. If you are supporting more
    than one platform add QUARTERS_MODULE_IAP scripting define to each platform tab in Player Settings
3.  Add Unity IAP package to your project 
4.  iOS - Setup IAP Products on iTunesConnect/<YourApp>/Features

    Requirements for Quarters IAP products (critical, make sure this is configured correctly)
    
    Example:
        Reference Name: 4 Quarters
        Type: Consumable
        Product ID: yourBundleId.4quarters

    Note: All quarters IAP product IDs MUST follow this naming convention:

        <applicationBundleId>.<numberOfQuarters>quarters

        examples:
            com.mycompanyname.mygamename.4quarters   
            com.mycompanyname.mygamename.8quarters
            ..
    
    To test IAP Purchases with iOS you dont have to submit Products to review. If "Paid Applications" agreements is valid and product is in "Ready to Submit" status testing purchases
    with Apples sandbox server will work. For more information how to test Apple IAP follow this link: https://developer.apple.com/apple-pay/sandbox-testing/


5a  Android - Upload build to beta on Google Play console. This step is needed to enable InAppBilling in your console.
6b. Android - Setup IAP Products on Google Play Store

    Requirements for Quarters IAP products (critical, make sure this is configured correctly)
    
    Example:
        Reference Name: 4 Quarters
        Type: Consumable
        Product ID: yourBundleId.4quarters

    Note: All quarters IAP product IDs MUST follow this naming convention:

        <applicationBundleId>.<numberOfQuarters>quarters

        examples:
            com.mycompanyname.mygamename.4quarters   
            com.mycompanyname.mygamename.8quarters
            ..
    
    To test Android purchases you must have Google Merchant account setup correctly. Your build number must be identical to the build number specified in Android Manifest. Otherwise Google Store will not
    return any products. More info on testing purchases with Google Play can be found here: https://developer.android.com/google/play/billing/billing_testing



###############################


Buying Quarters through In App Purchases Module


1. Authorize user with quarters
2. Call Quarters.Instance.GetUserDetails
3. Call QuartersIAP.Initialize - All products data will be pulled from store server

    Example:

    QuartersIAP.Instance.Initialize(testProducts, delegate(Product[] products) {
            
    //products lodaded

    }, delegate(InitializationFailureReason reason) {
        Debug.LogError(reason.ToString());
    });



4. After successful Initialization you can call QuartersIAP.Instance.BuyProduct - Native popup will be presented to the user to confirm the purchase.

    Example:

    QuartersIAP.Instance.BuyProduct(QuartersIAP.Instance.products[0], (Product product, string txId) => {
            
        Debug.Log("Purchase complete");

    },(string error) => {
        Debug.LogError("Purchase error: " + error);

    });



For another example look at Assets/QuartersSDK/Example/Example scene